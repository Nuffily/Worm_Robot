package org.iffomko.savers;

public interface Saver {
    /**
     * <p>Добавляет состояние какого-то <code>ComponentSaver</code> в наше состояние</p>
     * <p><i>Иначе говоря, сливаем под-словарь <code>ComponentSaver</code> с нашим словарем</i></p>
     * @param saver - объект <code>ComponentSaver</code>, который нужно слить с нашим словарем
     */
    void addState(ComponentSaver saver);

    /**
     * <p>Получить состояние какого-то под-словаря в нашем</p>
     * @param prefix - префикс, по которому происходит фильтрация
     * @return - готовый под-словарь
     */
    ComponentSaver getState(String prefix);

    /**
     * <p>Сохраняет свое состояние в какой-то бинарный файл в папке, которая находится в домашнем каталоге</p>
     */
    void save();

    /**
     * <p>Восстанавливает свое состояние из бинарного файла, который находится в соответствующей папке домашнего каталога</p>
     * <p>Если у вас уже есть какое-то состояние в <code>ApplicationSaver</code> или такого файла нет, то восстановление
     * будет прервано</p>
     * @return - возвращает результат работы. <code>true</code> - если восстановление состояния прошло успешно.
     *                                        <code>false</code> - если восстановление состояния не удалось
     */
    boolean restore();

    /**
     * <p>Проверяет восстановлены ли данные</p>
     * @return - выдает <code>true</code> если восстановлены, и <code>false</code> в противном случае
     */
    boolean isRestored();
}
